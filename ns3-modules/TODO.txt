10/15/2020


Goal:

My current goal is to get three functions to be usable in the ns3 program.

    - initialize()
    - initCarBuffer()
    - getCarPayload()


Function headers:

    voidinitialize(struct CarBuffer *car);
    struct CarBuffer *initCarBuffer();
    int getCarPayload(struct Car *carList, int carNumber, char *payload);

Function Body:

    void initialize(struct CarBuffer *buffer){
        
        startSwitch(buffer);
        while(buffer->flag){
        }
    }


Usage (In a NS3 script):

    // This is the buffer that your NS3 script will used to get packets
    // Needs to be passed in getCarPayload
    char payload[PAYLOADSIZE];

    // This just initializes a struct that contains a flag to determine when the program should stop, 
    // a int bufferSize, and the linkedlist of all the cars
    struct CarBuffer *buffer = initCarBuffer();

    // Starts the new module as normal
    initialize(struct CarBuffer *buffer)

    // Then use getCarPayload to get the packet/payload from a car and then read the "payload" buffer


Notes:

Only initialize needs to be changed, but I am only mentioning getCarPayload and initCarBuffer because I have 
not tested it yet.

In this txt, I wrote out what the functions suppose to be in C, but 
I am assuming that some of these functions, maybe more than the three I mentioned, needs to be converted to C++.



Unrelated to what needs to be done, the current module is already updated to handle:
    
    - Starting and stoping of fake_clients.py (or any program to connect to it)
    - Before it will no longer read packets if fake_clients stop and restarted

    - Handling the linkedlist of car is fix, you will probably not notice

    - This module will stop in 20 seconds if there are no more socket connections
    - This will alllow the NS3 script to end without having to use the CTRL-C interrupt
